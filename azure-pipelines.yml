trigger:
- feature/*
- develop

resources:
  repositories:
  - repository: github_pages
    type: github
    name: machielvisser/machielvisser.github.io
    ref: refs/heads/master
    endpoint: machielvisser

stages:
- stage: Test
  displayName: Dev/Test stage
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/')
  pool: 
    vmImage: 'ubuntu-latest'
  jobs:
  - job: TestBuild
    steps:
    - template: templates/build.yml

  - deployment: TestDeployment
    dependsOn: TestBuild
    condition: in(dependencies.TestBuild.result, 'Succeeded')
    displayName: Deploy the Test Infrastructure
    pool: 
      vmImage: 'ubuntu-latest'
    environment: 'website-test-environment'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Azure subscription'
              subscriptionId: 'e748d334-1bb7-4234-aa25-7e8b114b9e0e'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'Website-Test'
              location: 'West Europe'
              templateLocation: 'Linked artifact'
              csmFile: '$(Agent.BuildDirectory)/build-output/deployment/test-environment.json'
              overrideParameters: '-StorageName mvwebsiteteststorage'
              deploymentMode: 'Incremental'
              deploymentOutputs: 'deployment-output'
          #- template: templates/deployTestEnvironment.yml
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure subscription'
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                $output=ConvertFrom-Json '$(deployment-output)'
                az storage blob service-properties update --account-name $output.StorageName.value --static-website  --index-document index.html

- stage: Production
  displayName: Production stage
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
  pool: 
    vmImage: 'ubuntu-latest'
  jobs:
  - job: ProductionBuild
    steps:
    - template: templates/build.yml

  - deployment: ProductionDeployment
    dependsOn: ProductionBuild
    condition: in(dependencies.ProductionBuild.result, 'Succeeded')
    displayName: Deploy to release branch
    pool: 
      vmImage: 'ubuntu-latest'
    environment: 'github-pages'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/deployToGitHub.yml
