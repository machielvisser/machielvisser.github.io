trigger:
- master
- develop

resources:
  repositories:
  - repository: github_pages
    type: github
    name: machielvisser/machielvisser.github.io
    ref: refs/heads/release
    endpoint: machielvisser

stages:
- stage: Acceptance
  displayName: Acceptance stage
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
  pool: 
    vmImage: 'ubuntu-latest'
  jobs:
  - job: Build

  - job: Deploy



- stage: Production
  displayName: Production stage
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  pool: 
    vmImage: 'ubuntu-latest'
  jobs:
  - job: ProductionBuild
    steps:

    - script: |
        npm install
        gulp default --gulpfile gulpfile.js
      displayName: 'npm install and run gulp'

    - task: CopyFiles@2
      inputs:
        Contents: |
          js/*min*
          css/*min*
          vendor/**
          img/**
          favicon.ico
          index.html
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'build-output'
        publishLocation: 'pipeline'

  - deployment: Deploy
    dependsOn: ProductionBuild
    condition: in(dependencies.ProductionBuild.result, 'Succeeded')
    displayName: Deploy to release branch
    pool: 
      vmImage: 'ubuntu-latest'
    environment: 'github-pages'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: github_pages
            path: "$(Build.ArtifactStagingDirectory)/github_pages"

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Agent.BuildDirectory)'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/github_pages'
              CleanTargetFolder: true
            
          - powershell: |
              Write-Host "Adding artifact directory: $(Build.ArtifactStagingDirectory)/github_pages"
              git add "$(Build.ArtifactStagingDirectory)/github_pages"

              Write-Host "Set user.name to Pipeline"
              git config user.name "Pipeline"
              Write-Host "Commit changes"
              git commit -m "Push build to release branch"
              Write-Host "Push the commit to origin release"
              git push --set-upstream origin release
